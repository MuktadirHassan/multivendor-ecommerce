openapi: 3.0.3
info:
  title: E-commerce Address API
  version: 1.0.0
  description: Address management endpoints for multi-vendor e-commerce platform

components:
  schemas:
    Address:
      type: object
      required:
        - street
        - city
        - state
        - country
        - postalCode
      properties:
        id:
          type: integer
          readOnly: true
        userId:
          type: integer
          readOnly: true
        street:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        postalCode:
          type: string
        isDefault:
          type: boolean
          default: false

    AddressResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        message:
          type: string
        data:
          $ref: "#/components/schemas/Address"

    AddressListResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        message:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/Address"

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [error, fail]
        message:
          type: string
        error:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /addresses:
    get:
      tags:
        - Addresses
      summary: Get all addresses for authenticated user
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of addresses retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressListResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    post:
      tags:
        - Addresses
      summary: Create new address
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Address"
      responses:
        "201":
          description: Address created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressResponse"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /addresses/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: Address ID

    get:
      tags:
        - Addresses
      summary: Get address by ID
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Address retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Address not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags:
        - Addresses
      summary: Update address
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Address"
      responses:
        "200":
          description: Address updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressResponse"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Address not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags:
        - Addresses
      summary: Delete address
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Address deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Address not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /addresses/default:
    get:
      tags:
        - Addresses
      summary: Get default address
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Default address retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No default address found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /addresses/{id}/default:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: Address ID
    patch:
      tags:
        - Addresses
      summary: Set address as default
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Default address set successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Address not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
